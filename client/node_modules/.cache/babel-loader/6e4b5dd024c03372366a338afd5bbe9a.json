{"ast":null,"code":"import _regeneratorRuntime from\"/Users/danielhamam/Desktop/Computer_Programming/Beats Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/danielhamam/Desktop/Computer_Programming/Beats Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{LOGIN_LOADING,LOGIN_SUCCESS,LOGIN_ERROR}from\"./constants\";import{loginWithPassword}from\"./services\";import{errorParser}from'../../services/apiErrorParser';/* Login actions */export function loginSetLoading(loading){return{type:LOGIN_LOADING,payload:loading};}export function loginSetToken(token){return{type:LOGIN_SUCCESS,payload:token};}export function loginSetError(error){return{type:LOGIN_ERROR,payload:error.message};}export var checkLogin=function checkLogin(formData){return function(dispatch){return new Promise(function(resolve,reject){dispatch(loginSetLoading(true));loginWithPassword(formData).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dispatch(loginSetToken(res.token));case 2:resolve(res);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(err){var parsedError=errorParser.parseError(err);dispatch(loginSetError(parsedError));reject(err);}).finally(function(){dispatch(loginSetLoading(false));});});};};","map":{"version":3,"sources":["/Users/danielhamam/Desktop/Computer_Programming/Beats Website/src/store/auth/actions.js"],"names":["LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_ERROR","loginWithPassword","errorParser","loginSetLoading","loading","type","payload","loginSetToken","token","loginSetError","error","message","checkLogin","formData","dispatch","Promise","resolve","reject","then","res","catch","err","parsedError","parseError","finally"],"mappings":"qWAAA,OACEA,aADF,CAEEC,aAFF,CAGEC,WAHF,KAIO,aAJP,CAKA,OAASC,iBAAT,KAAkC,YAAlC,CACA,OAASC,WAAT,KAA4B,+BAA5B,CAEA,mBACA,MAAO,SAASC,CAAAA,eAAT,CAAyBC,OAAzB,CAAkC,CACvC,MAAO,CACLC,IAAI,CAAEP,aADD,CAELQ,OAAO,CAAEF,OAFJ,CAAP,CAID,CAED,MAAO,SAASG,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CACnC,MAAO,CACLH,IAAI,CAAEN,aADD,CAELO,OAAO,CAAEE,KAFJ,CAAP,CAID,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CACnC,MAAO,CACLL,IAAI,CAAEL,WADD,CAELM,OAAO,CAAEI,KAAK,CAACC,OAFV,CAAP,CAID,CAED,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,QAAc,UAACC,QAAD,CAAc,CACrD,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACvCH,QAAQ,CAACX,eAAe,CAAC,IAAD,CAAhB,CAAR,CACAF,iBAAiB,CAACY,QAAD,CAAjB,CAA4BK,IAA5B,0FAAiC,iBAAOC,GAAP,wIAC1BL,CAAAA,QAAQ,CAACP,aAAa,CAACY,GAAG,CAACX,KAAL,CAAd,CADkB,QAEhCQ,OAAO,CAACG,GAAD,CAAP,CAFgC,sDAAjC,gEAGGC,KAHH,CAGS,SAACC,GAAD,CAAS,CACjB,GAAMC,CAAAA,WAAW,CAAGpB,WAAW,CAACqB,UAAZ,CAAuBF,GAAvB,CAApB,CACAP,QAAQ,CAACL,aAAa,CAACa,WAAD,CAAd,CAAR,CACAL,MAAM,CAACI,GAAD,CAAN,CACA,CAPD,EAOGG,OAPH,CAOW,UAAM,CAChBV,QAAQ,CAACX,eAAe,CAAC,KAAD,CAAhB,CAAR,CACA,CATD,EAUA,CAZM,CAAP,CAaA,CAdyB,EAAnB","sourcesContent":["import {\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n} from \"./constants\";\nimport { loginWithPassword } from \"./services\";\nimport { errorParser } from '../../services/apiErrorParser';\n\n/* Login actions */\nexport function loginSetLoading(loading) {\n  return {\n    type: LOGIN_LOADING,\n    payload: loading,\n  };\n}\n\nexport function loginSetToken(token) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: token,\n  };\n}\n\nexport function loginSetError(error) {\n  return {\n    type: LOGIN_ERROR,\n    payload: error.message,\n  };\n}\n\nexport const checkLogin = (formData) => (dispatch) => {\n\treturn new Promise((resolve, reject) => {\n\t\tdispatch(loginSetLoading(true));\n\t\tloginWithPassword(formData).then(async (res) => {\n\t\t\tawait dispatch(loginSetToken(res.token));\n\t\t\tresolve(res)\n\t\t}).catch((err) => {\n\t\t\tconst parsedError = errorParser.parseError(err)\n\t\t\tdispatch(loginSetError(parsedError));\n\t\t\treject(err)\n\t\t}).finally(() => {\n\t\t\tdispatch(loginSetLoading(false));\n\t\t})\n\t})\n};\n"]},"metadata":{},"sourceType":"module"}