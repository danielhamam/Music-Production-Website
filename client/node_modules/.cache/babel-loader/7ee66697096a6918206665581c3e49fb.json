{"ast":null,"code":"import { MEDIA_LOADING, MEDIA_SET_DATA, MEDIA_ERROR, MEDIA_REMOVE_DATA } from \"./constants\";\nconst initialState = {\n  loading: false,\n  errorMessage: {},\n  media: []\n};\nexport function mediaReducer(state = initialState, action) {\n  switch (action.type) {\n    case MEDIA_LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    case MEDIA_ERROR:\n      return { ...state,\n        errorMessage: action.payload\n      };\n\n    case MEDIA_SET_DATA:\n      return { ...state,\n        media: action.payload\n      };\n\n    case MEDIA_REMOVE_DATA:\n      console.log(state.media.filter(m => m._id != action.payload));\n      return { ...state,\n        media: state.media.filter(m => m._id != action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/danielhamam/Desktop/Computer_Programming/Beats Website/src/store/media/reducers.js"],"names":["MEDIA_LOADING","MEDIA_SET_DATA","MEDIA_ERROR","MEDIA_REMOVE_DATA","initialState","loading","errorMessage","media","mediaReducer","state","action","type","payload","console","log","filter","m","_id"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,cAAxB,EAAwCC,WAAxC,EAAqDC,iBAArD,QAA8E,aAA9E;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,SAASC,YAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,YAAY,EAAEI,MAAM,CAACE;AAFhB,OAAP;;AAIF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKT,iBAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACF,KAAN,CAAYQ,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACC,GAAF,IAASP,MAAM,CAACE,OAAxC,CAAZ;AACA,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYQ,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACC,GAAF,IAASP,MAAM,CAACE,OAAxC;AAFF,OAAP;;AAIF;AACE,aAAOH,KAAP;AAvBJ;AAyBD","sourcesContent":["import { MEDIA_LOADING, MEDIA_SET_DATA, MEDIA_ERROR, MEDIA_REMOVE_DATA } from \"./constants\";\nconst initialState = {\n  loading: false,\n  errorMessage: {},\n  media: [],\n};\n\nexport function mediaReducer(state = initialState, action) {\n  switch (action.type) {\n    case MEDIA_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case MEDIA_ERROR:\n      return {\n        ...state,\n        errorMessage: action.payload,\n      };\n    case MEDIA_SET_DATA:\n      return {\n        ...state,\n        media: action.payload,\n      };\n    case MEDIA_REMOVE_DATA:\n      console.log(state.media.filter(m => m._id != action.payload))\n      return {\n        ...state,\n        media: state.media.filter(m => m._id != action.payload)\n      }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}